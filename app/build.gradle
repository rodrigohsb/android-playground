apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.0'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$[0-9].*'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "br.com.androidplayground"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            minifyEnabled false
            applicationIdSuffix ".debug"
        }
    }
    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:${kotlinVersion}"
    implementation "com.android.support.constraint:constraint-layout:${constraintVersion}"

    implementation "com.android.support:recyclerview-v7:${supportVersion}"
    implementation "com.android.support:appcompat-v7:${supportVersion}"
    implementation "com.android.support:design:${supportVersion}"
    implementation "com.android.support:cardview-v7:${supportVersion}"

    implementation "android.arch.lifecycle:runtime:${archLifecycleRuntimeVersion}"
    implementation "android.arch.lifecycle:extensions:${archLifecycleExtensionsVersion}"
    kapt "android.arch.lifecycle:compiler:${archLifecycleExtensionsVersion}"

    implementation "android.arch.persistence.room:runtime:${roomVersion}"
    kapt "android.arch.persistence.room:compiler:${roomVersion}"

    implementation "com.github.salomonbrys.kodein:kodein:${kodeinVersion}"
    implementation "com.github.salomonbrys.kodein:kodein-android:${kodeinVersion}"
    implementation "com.github.salomonbrys.kodein:kodein-core:${kodeinVersion}"
    implementation "com.github.salomonbrys.kodein:kodein-conf:${kodeinVersion}"

    implementation "com.google.code.gson:gson:${gsonVersion}"

    implementation "org.mockito:mockito-core:${mockitoCoreVersion}"
    androidTestImplementation "org.mockito:mockito-android:${mockitoAndroidVersion}"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
    testImplementation "junit:junit:${junitVersion}"
    androidTestImplementation "com.android.support.test:runner:${runnerVersion}"

    androidTestUtil 'com.android.support.test:orchestrator:1.0.2-alpha1'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:2.0') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

}